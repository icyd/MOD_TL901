Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328p.o (exit)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eerd_byte_atmega328p.o)
                              main.o (__eerd_byte_m328p)

Discarded input sections

 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328p.o
LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libm.a
LOAD main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x3e2
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.progmem*)
 .progmem.data  0x0000000000000068       0xca main.o
                0x0000000000000068                vrmsTriac
                0x0000000000000132                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000132                __ctors_start = .
 *(.ctors)
                0x0000000000000132                __ctors_end = .
                0x0000000000000132                __dtors_start = .
 *(.dtors)
                0x0000000000000132                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000132        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328p.o
                0x0000000000000132                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000132        0xc /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000013e       0x16 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                0x000000000000013e                __do_copy_data
 .init4         0x0000000000000154       0x10 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000154                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000164        0x8 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x000000000000016c        0x4 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328p.o
                0x000000000000016c                __vector_22
                0x000000000000016c                __vector_24
                0x000000000000016c                __vector_12
                0x000000000000016c                __bad_interrupt
                0x000000000000016c                __vector_6
                0x000000000000016c                __vector_3
                0x000000000000016c                __vector_23
                0x000000000000016c                __vector_25
                0x000000000000016c                __vector_17
                0x000000000000016c                __vector_19
                0x000000000000016c                __vector_7
                0x000000000000016c                __vector_5
                0x000000000000016c                __vector_4
                0x000000000000016c                __vector_9
                0x000000000000016c                __vector_2
                0x000000000000016c                __vector_15
                0x000000000000016c                __vector_8
                0x000000000000016c                __vector_14
                0x000000000000016c                __vector_10
                0x000000000000016c                __vector_16
                0x000000000000016c                __vector_20
 .text          0x0000000000000170       0xfe main.o
                0x0000000000000170                ewma
                0x0000000000000198                uart_tx
                0x00000000000001a6                __vector_1
                0x00000000000001ee                __vector_13
                0x0000000000000204                __vector_11
                0x000000000000021a                __vector_21
                0x000000000000024e                __vector_18
 .text          0x000000000000026e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text          0x000000000000026e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text          0x000000000000026e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x000000000000026e        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eerd_byte_atmega328p.o)
                0x000000000000026e                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000026e      0x160 main.o
                0x000000000000026e                main
 .text.libgcc.mul
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000003ce        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000000000003ce       0x10 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eerd_byte_atmega328p.o)
                0x00000000000003ce                __eerd_byte_m328p
                0x00000000000003de                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000003de        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                0x00000000000003de                exit
                0x00000000000003de                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000003de        0x4 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000003e2                _etext = .

.data           0x0000000000800100        0x2 load address 0x00000000000003e2
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328p.o
 .data          0x0000000000800100        0x2 main.o
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eerd_byte_atmega328p.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800102                . = ALIGN (0x2)
                0x0000000000800102                _edata = .
                0x0000000000800102                PROVIDE (__data_end, .)

.bss            0x0000000000800102        0x5
                0x0000000000800102                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x0000000000800102        0x5 main.o
                0x0000000000800102                adcAvg
                0x0000000000800103                adcData
                0x0000000000800105                onChange
                0x0000000000800106                triacPow
 .bss           0x0000000000800107        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800107        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800107        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800107        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eerd_byte_atmega328p.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800107                PROVIDE (__bss_end, .)
                0x00000000000003e2                __data_load_start = LOADADDR (.data)
                0x00000000000003e4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800107        0x0
                0x0000000000800107                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800107                PROVIDE (__noinit_end, .)
                0x0000000000800107                _end = .
                0x0000000000800107                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x27
 *(.comment)
 .comment       0x0000000000000000       0x27 main.o
                                         0x28 (size before relaxing)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x28
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 main.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x87a
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x5f4 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328p.o
 .debug_info    0x00000000000005f4      0x286 main.o

.debug_abbrev   0x0000000000000000      0x718
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x5a2 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328p.o
 .debug_abbrev  0x00000000000005a2      0x176 main.o

.debug_line     0x0000000000000000      0x1ea
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328p.o
 .debug_line    0x000000000000001d      0x1cd main.o

.debug_frame    0x0000000000000000      0x104
 *(.debug_frame)
 .debug_frame   0x0000000000000000      0x104 main.o

.debug_str      0x0000000000000000     0x8436
 *(.debug_str)
 .debug_str     0x0000000000000000      0x208 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328p.o
 .debug_str     0x0000000000000208     0x822e main.o
                                       0x83d3 (size before relaxing)

.debug_loc      0x0000000000000000      0x215
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x215 main.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x18
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x18 main.o

.debug_macro    0x0000000000000000     0x2b61
 *(.debug_macro)
 .debug_macro   0x0000000000000000       0xdd main.o
 .debug_macro   0x00000000000000dd      0xa42 main.o
 .debug_macro   0x0000000000000b1f       0x10 main.o
 .debug_macro   0x0000000000000b2f      0x1c9 main.o
 .debug_macro   0x0000000000000cf8      0x2fc main.o
 .debug_macro   0x0000000000000ff4       0x9e main.o
 .debug_macro   0x0000000000001092     0x13ae main.o
 .debug_macro   0x0000000000002440      0x13a main.o
 .debug_macro   0x000000000000257a       0xbd main.o
 .debug_macro   0x0000000000002637       0x34 main.o
 .debug_macro   0x000000000000266b       0x18 main.o
 .debug_macro   0x0000000000002683       0x6c main.o
 .debug_macro   0x00000000000026ef       0x69 main.o
 .debug_macro   0x0000000000002758       0x88 main.o
 .debug_macro   0x00000000000027e0      0x166 main.o
 .debug_macro   0x0000000000002946       0x3c main.o
 .debug_macro   0x0000000000002982       0x2e main.o
 .debug_macro   0x00000000000029b0       0xa0 main.o
 .debug_macro   0x0000000000002a50       0x10 main.o
 .debug_macro   0x0000000000002a60       0x35 main.o
 .debug_macro   0x0000000000002a95       0xcc main.o
OUTPUT(zcross.out elf32-avr)
LOAD linker stubs
