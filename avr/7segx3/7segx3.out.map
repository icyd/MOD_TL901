Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm328p.o (exit)

Discarded input sections

 .group         0x0000000000000000        0x8 7segx3.o
 .group         0x0000000000000000        0x8 7segx3.o
 .group         0x0000000000000000        0x8 7segx3.o
 .group         0x0000000000000000        0x8 7segx3.o
 .group         0x0000000000000000        0x8 7segx3.o
 .group         0x0000000000000000        0x8 7segx3.o
 .group         0x0000000000000000        0x8 7segx3.o
 .group         0x0000000000000000        0x8 7segx3.o
 .group         0x0000000000000000        0x8 7segx3.o
 .group         0x0000000000000000        0x8 7segx3.o
 .group         0x0000000000000000        0x8 7segx3.o
 .group         0x0000000000000000        0x8 7segx3.o
 .group         0x0000000000000000        0x8 7segx3.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm328p.o
LOAD /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/libm.a
LOAD 7segx3.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x11e
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000074        0x8 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x000000000000007c        0x4 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm328p.o
                0x000000000000007c                __vector_22
                0x000000000000007c                __vector_1
                0x000000000000007c                __vector_24
                0x000000000000007c                __vector_12
                0x000000000000007c                __bad_interrupt
                0x000000000000007c                __vector_6
                0x000000000000007c                __vector_3
                0x000000000000007c                __vector_23
                0x000000000000007c                __vector_25
                0x000000000000007c                __vector_11
                0x000000000000007c                __vector_13
                0x000000000000007c                __vector_17
                0x000000000000007c                __vector_19
                0x000000000000007c                __vector_7
                0x000000000000007c                __vector_5
                0x000000000000007c                __vector_4
                0x000000000000007c                __vector_9
                0x000000000000007c                __vector_2
                0x000000000000007c                __vector_21
                0x000000000000007c                __vector_15
                0x000000000000007c                __vector_8
                0x000000000000007c                __vector_14
                0x000000000000007c                __vector_10
                0x000000000000007c                __vector_16
                0x000000000000007c                __vector_18
                0x000000000000007c                __vector_20
 .text          0x0000000000000080        0x0 7segx3.o
 .text          0x0000000000000080        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
                0x0000000000000080                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000080       0x9a 7segx3.o
                0x0000000000000080                main
 .text.libgcc.mul
                0x000000000000011a        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000011a        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000011a        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000011a        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000011a        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000011a        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000011a        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
                0x000000000000011a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000011a        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
                0x000000000000011a                exit
                0x000000000000011a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000011a        0x4 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000011e                _etext = .

.data           0x0000000000800100        0x0 load address 0x000000000000011e
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm328p.o
 .data          0x0000000000800100        0x0 7segx3.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                0x0000000000800100                PROVIDE (__data_end, .)

.bss            0x0000000000800100        0x0
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x0000000000800100        0x0 7segx3.o
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800100                PROVIDE (__bss_end, .)
                0x000000000000011e                __data_load_start = LOADADDR (.data)
                0x000000000000011e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800100        0x0
                0x0000000000800100                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800100                PROVIDE (__noinit_end, .)
                0x0000000000800100                _end = .
                0x0000000000800100                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 7segx3.o
                                         0x12 (size before relaxing)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 7segx3.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x78c
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x5f4 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm328p.o
 .debug_info    0x00000000000005f4      0x198 7segx3.o

.debug_abbrev   0x0000000000000000      0x687
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x5a2 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm328p.o
 .debug_abbrev  0x00000000000005a2       0xe5 7segx3.o

.debug_line     0x0000000000000000      0x194
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm328p.o
 .debug_line    0x000000000000001d      0x177 7segx3.o

.debug_frame    0x0000000000000000       0x24
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x24 7segx3.o

.debug_str      0x0000000000000000     0x6a5d
 *(.debug_str)
 .debug_str     0x0000000000000000      0x208 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm328p.o
 .debug_str     0x0000000000000208     0x6855 7segx3.o
                                       0x6900 (size before relaxing)

.debug_loc      0x0000000000000000       0x86
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0x86 7segx3.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x10
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x10 7segx3.o

.debug_macro    0x0000000000000000     0x282b
 *(.debug_macro)
 .debug_macro   0x0000000000000000       0xa9 7segx3.o
 .debug_macro   0x00000000000000a9      0xa3c 7segx3.o
 .debug_macro   0x0000000000000ae5       0x10 7segx3.o
 .debug_macro   0x0000000000000af5      0x1c9 7segx3.o
 .debug_macro   0x0000000000000cbe      0x2fc 7segx3.o
 .debug_macro   0x0000000000000fba       0x9e 7segx3.o
 .debug_macro   0x0000000000001058     0x13ae 7segx3.o
 .debug_macro   0x0000000000002406      0x13a 7segx3.o
 .debug_macro   0x0000000000002540       0xbd 7segx3.o
 .debug_macro   0x00000000000025fd       0x34 7segx3.o
 .debug_macro   0x0000000000002631       0x18 7segx3.o
 .debug_macro   0x0000000000002649       0x6c 7segx3.o
 .debug_macro   0x00000000000026b5       0x10 7segx3.o
 .debug_macro   0x00000000000026c5      0x166 7segx3.o
OUTPUT(7segx3.out elf32-avr)
LOAD linker stubs
